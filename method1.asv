close all;
imagen=imread('fotos/cells.jpg');
figure
imshow(imagen)
title('Imagen Original')
hsvi=rgb2hsv(imagen);
Mask = (hsvi(:,:,3)>0.068);
%figure
%imshow(Mask);
% title('Capa 3 de hsv imagen')
gray_image = rgb2gray(imagen);
%figure
%imshow(gray_image);
imbaniza=imbinarize(gray_image);
%figure
%imshow(imbaniza);


J = imerode(Mask,strel('disk',14));
figure
imshow(J);
title('M erosionado')

J = imdilate(J,strel('disk',13));
figure
imshow(J);
title('J dilatado')


%contamos cantidad de manchas
J = ~J;
figure
imshow(J);
J= imclearborder(J);
figure
imshow(J);
[labeledImage, numbercircles] = bwlabel(J);
disp("Manchas")
disp(numbercircles);


%intesificar la imagen y sobresaltar los colores blancos y negros.
gray_image = imadjust(gray_image,[0.3 0.7],[]);
%binarizas la imagen
bin = imbinarize(gray_image);
%borra todo lo negro y se queda solo con lo blanco
bin = imclearborder(bin);
%elimina los hueco blanco que tienen menor de 10 pixeles.
bin = bwareaopen(bin, 10);
%te devuelde componentes conectado por default 8 objetos.
[labeledImage0, numbercircles0] = bwlabel(bin);
m = regionprops(labeledImage0);
% figure,imshow(labeledImage0)
% title('bin')
disp('Globulos blancos')
disp(numbercircles0)




%En la imagen intesifica buscamos los bordes.
%Las figuras pegadas a los bordes de la imagen no las cuentas
%extrae el umbral de los bordes de las figuras.
[~, threshold] = edge(gray_image, 'canny');
cc = 1.5;
%te la la imagen bordeada.
imagen_bordeada = edge(gray_image,'canny', threshold*cc);
%borramos todo lo negro.
imagen_bordeada1= imclearborder(imagen_bordeada);


% rellenamos los edges cerrados.
imagen_sin_agujeros = imfill(imagen_bordeada1,'holes');
% extraemos los mayores a 20 pixeles.
imagen_sin_agujeros = bwareaopen(imagen_sin_agujeros, 20);
figure
imshow(imagen_sin_agujeros)
title('imagen_sin_agujeros')
[labeledImage2, numbercircles2] = bwlabel(imagen_sin_agujeros);


stats = regionprops('table',imagen_sin_agujeros,'Area');
stats = sortrows(stats,'Area');
A=table2array(stats);
% disp(A);
mfloor=A( floor(length(A)*0.23));


extractCircle = bwpropfilt(imagen_sin_agujeros,'Area',[100 max(A)]);
figure
imshow(extractCircle);
title('RBC ExtraÃ­das')


% Contar el numero de circulos
f = bwconncomp(extractCircle, 8);
RBC_counter = f.NumObjects;

disp("Total Celulas")
disp(RBC_counter)


disp("Globulos rojos")
disp(RBC_counter-numbercircles-numbercircles0)

% RBC_counter = Total_counter-manchas_counter-WBC_counter;
% disp("Globulos rojos")
% disp(RBC_counter)

% if (WBC_counter > RBC_counter)
%     disp("Positivo para leucemia");
% else
%     disp("Negativo para leucemia");
% end




